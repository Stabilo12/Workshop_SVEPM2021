<<<<<<< HEAD
[["index.html", "Workshop 2 SVEPM 2021 Chapter 1 First break-out room 1.1 Create Phyloseq object 1.2 Calculate alpha-diversities", " Workshop 2 SVEPM 2021 J.G. Kers &amp; E.A.J. Fischer 2021-03-15 Chapter 1 First break-out room Study design data Load packages library(phyloseq) library(microbiome) library(data.table) library(RColorBrewer) library(ggpubr) library(readr) library(picante) library(nlme) library(ggplot2) library(ape) library(data.table) library(DT) 1.1 Create Phyloseq object Additional reading Phyloseq Let’s start with uploading the data, 3 files are needed: Biom file Metadata file Tree file The data we use in this workshop has been publised A phyloseq object contains information on: the abundances of the amplicon sequence variant (ASV), the taxonomy of the ASV, the phylogenetic tree, and the metadata of the samples. pseq &lt;- read_phyloseq(otu.file= &quot;BiomWorkshop.biom1&quot;, taxonomy.file = NULL, metadata.file = &quot;MetaWorkshop.csv&quot;, type=&quot;biom&quot;, sep =&quot;;&quot; ) treefile &lt;- read_tree(&quot;TreeWorkshop.tree&quot;) ps &lt;- merge_phyloseq(pseq, treefile) ps ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 489 taxa and 28 samples ] ## sample_data() Sample Data: [ 28 samples by 8 sample variables ] ## tax_table() Taxonomy Table: [ 489 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 489 tips and 488 internal nodes ] ps is the phyloseq object and contains 28 chicken samples and 489 ASV. We can view the taxonomy of the ASV within a taxa table: datatable(tax_table(ps)) The focus is on the diversities but a mini sequences controle cannot be missed. The datatable shows the presences of an unknown Domain (“NA”), we want to remove this. Do you know why? ps1 &lt;- subset_taxa(ps, Domain!=&quot;NA&quot;) ps1 ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 486 taxa and 28 samples ] ## sample_data() Sample Data: [ 28 samples by 8 sample variables ] ## tax_table() Taxonomy Table: [ 486 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 486 tips and 485 internal nodes ] Summary sequence data To review the sequence data in we can use the summary function summarize_phyloseq(ps1) ## Compositional = NO2 ## 1] Min. number of reads = 396052] Max. number of reads = 2612713] Total number of reads = 35815914] Average number of reads = 127913.9642857145] Median number of reads = 1099827] Sparsity = 0.8179012345679016] Any OTU sum to 1 or less? NO8] Number of singletons = 09] Percent of OTUs that are singletons ## (i.e. exactly one read detected across all samples)010] Number of sample variables are: 8BarcodeSequenceLibraryNumberLibraryNameProjectNameX16S_regionprimersPenFeed2 ## [[1]] ## [1] &quot;1] Min. number of reads = 39605&quot; ## ## [[2]] ## [1] &quot;2] Max. number of reads = 261271&quot; ## ## [[3]] ## [1] &quot;3] Total number of reads = 3581591&quot; ## ## [[4]] ## [1] &quot;4] Average number of reads = 127913.964285714&quot; ## ## [[5]] ## [1] &quot;5] Median number of reads = 109982&quot; ## ## [[6]] ## [1] &quot;7] Sparsity = 0.817901234567901&quot; ## ## [[7]] ## [1] &quot;6] Any OTU sum to 1 or less? NO&quot; ## ## [[8]] ## [1] &quot;8] Number of singletons = 0&quot; ## ## [[9]] ## [1] &quot;9] Percent of OTUs that are singletons \\n (i.e. exactly one read detected across all samples)0&quot; ## ## [[10]] ## [1] &quot;10] Number of sample variables are: 8&quot; ## ## [[11]] ## [1] &quot;BarcodeSequence&quot; &quot;LibraryNumber&quot; &quot;LibraryName&quot; &quot;ProjectName&quot; &quot;X16S_region&quot; &quot;primers&quot; &quot;Pen&quot; ## [8] &quot;Feed&quot; What is the number of singletons in this dataset? Check rarefaction The number of species = ASV (y-as) should reach a plateau if the sample size = reads (x-as) is large enough. otu_tab &lt;- t(abundances(ps1)) p &lt;- vegan::rarecurve(otu_tab, step = 50, label = FALSE, sample = min(rowSums(otu_tab), Col =&quot;red&quot;, cex = 0.5)) 1.2 Calculate alpha-diversities Let’s first visualize the data plot_richness(ps1, &quot;Pen&quot;, &quot;Feed&quot;, measures=c(&quot;Observed&quot;, &quot;Shannon&quot;, &quot;Simpson&quot;, &quot;InvSimpson&quot;)) What stands out? Let’s test the four different (non-phylogenetic) alpha diversities on feed and pen alpha &lt;- estimate_richness(ps1, measures = c(&quot;Observed&quot;, &quot;Shannon&quot;, &quot;Simpson&quot;, &quot;InvSimpson&quot; )) meta &lt;- meta(ps1) #extract metadata Observed kruskal.pd &lt;- kruskal.test(alpha$Observed ~ meta$Feed) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: alpha$Observed by meta$Feed ## Kruskal-Wallis chi-squared = 16.755, df = 1, p-value = 4.253e-05 pairwise.wilcox.test(alpha$Observed, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum test with continuity correction ## ## data: alpha$Observed and meta$Pen ## ## 1 2 3 ## 2 0.7478 - - ## 3 0.0249 0.0107 - ## 4 0.0064 0.0064 0.0065 ## ## P value adjustment method: BH Simpson kruskal.pd &lt;- kruskal.test(alpha$Simpson ~ meta$Feed) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: alpha$Simpson by meta$Feed ## Kruskal-Wallis chi-squared = 14.196, df = 1, p-value = 0.0001648 pairwise.wilcox.test(alpha$Simpson, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum exact test ## ## data: alpha$Simpson and meta$Pen ## ## 1 2 3 ## 2 0.0455 - - ## 3 0.0035 0.2086 - ## 4 0.0012 0.0012 0.0012 ## ## P value adjustment method: BH Shannon kruskal.pd &lt;- kruskal.test(alpha$Shannon ~ meta$Feed) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: alpha$Shannon by meta$Feed ## Kruskal-Wallis chi-squared = 15.98, df = 1, p-value = 6.403e-05 pairwise.wilcox.test(alpha$Shannon, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum exact test ## ## data: alpha$Shannon and meta$Pen ## ## 1 2 3 ## 2 0.1282 - - ## 3 0.0105 0.0315 - ## 4 0.0012 0.0012 0.0012 ## ## P value adjustment method: BH Phylogenetic diversity #library(picante) ps.otu &lt;- as.data.frame(ps1@otu_table) ps.tree &lt;- ps1@phy_tree df.pd &lt;- pd(t(ps.otu), treefile, include.root=T) # rooted tree meta$Phylogenetic_Diversity &lt;- df.pd$PD pd.plot &lt;- ggboxplot(meta, x = &quot;Pen&quot;, y = &quot;Phylogenetic_Diversity&quot;, fill = &quot;Feed&quot;) pd.plot kruskal.pd &lt;- kruskal.test(meta$Phylogenetic_Diversity ~ meta$Pen) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: meta$Phylogenetic_Diversity by meta$Pen ## Kruskal-Wallis chi-squared = 22.33, df = 3, p-value = 5.569e-05 pairwise.wilcox.test(meta$Phylogenetic_Diversity, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum exact test ## ## data: meta$Phylogenetic_Diversity and meta$Pen ## ## 1 2 3 ## 2 0.2593 - - ## 3 0.0017 0.0028 - ## 4 0.0012 0.0012 0.0012 ## ## P value adjustment method: BH Additional reading Shetty Sudarshan A, Lahti Leo, Hermes Gerben DA, &amp; Hauke Smidt. (2020, April 11) Microbial bioinformatics introductory course material 2018 (Version v3.0). Zenodo http://doi.org/10.5281/zenodo.1436630 "],["second-break-out-room.html", "Chapter 2 Second break-out room 2.1 PERMANOVA", " Chapter 2 Second break-out room We will calculated four different beta diversities: Bray-Curtis, Jaccard, unweighted UniFrac and Weighted UniFrac and use Principal Coordinates Analysis (PCoA, = Multidimensional scaling, MDS). This is a method to explore and to visualize similarities or dissimilarities of data. set.seed(12345) metadata &lt;- as(sample_data(ps1), &quot;data.frame&quot;) ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;bray&quot;) p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA Jaccard&quot;) p1 ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;jaccard&quot;, binary = TRUE) ##binary = TRUE! p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA Jaccard&quot;) p1 ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;wunifrac&quot;) p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA wunifrac&quot;) p1 ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;unifrac&quot;) p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA unifrac&quot;) p1 What stands out? Which beta diversity would you use? 2.1 PERMANOVA dist.b &lt;- phyloseq::distance(ps1, method = &quot;bray&quot;) dist.j &lt;- phyloseq::distance(ps1, method = &quot;jaccard&quot;, binary = TRUE) dist.uf &lt;- phyloseq::distance(ps1, method = &quot;unifrac&quot;) dist.wuf &lt;- phyloseq::distance(ps1, method = &quot;wunifrac&quot;) adonis(dist.b ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.b ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 2.2000 2.2000 9.1588 0.2605 1e-04 *** ## Residuals 26 6.2453 0.2402 0.7395 ## Total 27 8.4453 1.0000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.b, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.010126 0.0101263 2.3739 999 0.132 ## Residuals 26 0.110907 0.0042656 adonis(dist.j ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.j ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 1.8183 1.81828 7.3404 0.22017 1e-04 *** ## Residuals 26 6.4404 0.24771 0.77983 ## Total 27 8.2587 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.j, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.047419 0.047419 17.286 999 0.001 *** ## Residuals 26 0.071322 0.002743 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis(dist.uf ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.uf ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 0.70667 0.70667 11.734 0.31096 1e-04 *** ## Residuals 26 1.56590 0.06023 0.68904 ## Total 27 2.27257 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.uf, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.025001 0.0250014 38.108 999 0.001 *** ## Residuals 26 0.017058 0.0006561 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis(dist.wuf ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.wuf ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 0.31792 0.31792 11.132 0.2998 1e-04 *** ## Residuals 26 0.74253 0.02856 0.7002 ## Total 27 1.06045 1.0000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.wuf, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.018811 0.0188112 8.6956 999 0.009 ** ## Residuals 26 0.056246 0.0021633 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Which beta diversity explained most of the variation with the factor feed? Additional reading Gloor et al., 2017: Microbiome Datasets Are Compositional: And This Is Not Optional Paliy and Shankar, 2016: Application of multivariate statistical techniques in microbial ecology "],["third-break-out-room.html", "Chapter 3 Third break-out room 3.1 Barplot 3.2 Dendrogram", " Chapter 3 Third break-out room 3.1 Barplot ps1.com &lt;- microbiome::transform(ps1, &quot;compositional&quot;) ps1.com.fil = filter_taxa(ps1.com, function(x) sum(x) &gt; .01, TRUE) ps.phylum = tax_glom(ps1.com.fil, taxrank=&quot;Family&quot;, NArm=FALSE) plot_bar(ps.phylum, fill=&quot;Family&quot;) + facet_wrap(~Pen, scales= &quot;free_x&quot;, nrow=1) Try how filtering influence the barplot 3.2 Dendrogram d &lt;- distance(ps1, method = &quot;jaccard&quot;, binary = TRUE) #d &lt;- distance(ps1, method = &quot;wunifrac&quot;) # distance hpws &lt;- hclust(d, method = &quot;ward.D2&quot;) # add color library(dendextend) dend &lt;- as.dendrogram(hpws) colors_to_use &lt;- as.numeric(meta$Pen) colors_to_use &lt;- colors_to_use[order.dendrogram(dend)] labels_colors(dend) &lt;- colors_to_use plot(as.dendrogram(dend, hang = -1, cex = 0.6)) Try how cluster type influence the dendrogram "]]
=======
[["index.html", "Workshop 2 SVEPM 2021 Chapter 1 First break-out room 1.1 Create Phyloseq object 1.2 Calculate alpha-diversities", " Workshop 2 SVEPM 2021 J.G. Kers &amp; E.A.J. Fischer 2021-03-14 Chapter 1 First break-out room Study design data Load packages library(phyloseq) library(microbiome) library(data.table) library(RColorBrewer) library(ggpubr) library(readr) library(picante) library(nlme) library(ggplot2) library(ape) library(vegan) library(data.table) library(DT) 1.1 Create Phyloseq object Additional reading Phyloseq Let’s start with uploading the data, 3 files are needed: Biom file Metadata file Tree file The data we use in this workshop has been publised A phyloseq object contains information on: the abundances of the amplicon sequence variant (ASV), the taxonomy of the ASV, the phylogenetic tree, and the metadata of the samples. pseq &lt;- read_phyloseq(otu.file= &quot;BiomWorkshop.biom1&quot;, taxonomy.file = NULL, metadata.file = &quot;MetaWorkshop.csv&quot;, type=&quot;biom&quot;, sep =&quot;;&quot; ) treefile &lt;- read_tree(&quot;TreeWorkshop.tree&quot;) ps &lt;- merge_phyloseq(pseq, treefile) ps ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 489 taxa and 28 samples ] ## sample_data() Sample Data: [ 28 samples by 8 sample variables ] ## tax_table() Taxonomy Table: [ 489 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 489 tips and 488 internal nodes ] ps is the phyloseq object and contains 28 chicken samples and 489 ASV. We can view the taxonomy of the ASV within a taxa table: datatable(tax_table(ps)) The focus is on the diversities but a mini sequences controle cannot be missed. The datatable shows the presences of an unknown Domain (“NA”), we want to remove this. Do you know why? ps1 &lt;- subset_taxa(ps, Domain!=&quot;NA&quot;) ps1 ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 486 taxa and 28 samples ] ## sample_data() Sample Data: [ 28 samples by 8 sample variables ] ## tax_table() Taxonomy Table: [ 486 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 486 tips and 485 internal nodes ] Summary sequence data To review the sequence data in we can use the summary function summarize_phyloseq(ps1) ## Compositional = NO2 ## 1] Min. number of reads = 396052] Max. number of reads = 2612713] Total number of reads = 35815914] Average number of reads = 127913.9642857145] Median number of reads = 1099827] Sparsity = 0.8179012345679016] Any OTU sum to 1 or less? NO8] Number of singletons = 09] Percent of OTUs that are singletons ## (i.e. exactly one read detected across all samples)010] Number of sample variables are: 8BarcodeSequenceLibraryNumberLibraryNameProjectNameX16S_regionprimersPenFeed2 ## [[1]] ## [1] &quot;1] Min. number of reads = 39605&quot; ## ## [[2]] ## [1] &quot;2] Max. number of reads = 261271&quot; ## ## [[3]] ## [1] &quot;3] Total number of reads = 3581591&quot; ## ## [[4]] ## [1] &quot;4] Average number of reads = 127913.964285714&quot; ## ## [[5]] ## [1] &quot;5] Median number of reads = 109982&quot; ## ## [[6]] ## [1] &quot;7] Sparsity = 0.817901234567901&quot; ## ## [[7]] ## [1] &quot;6] Any OTU sum to 1 or less? NO&quot; ## ## [[8]] ## [1] &quot;8] Number of singletons = 0&quot; ## ## [[9]] ## [1] &quot;9] Percent of OTUs that are singletons \\n (i.e. exactly one read detected across all samples)0&quot; ## ## [[10]] ## [1] &quot;10] Number of sample variables are: 8&quot; ## ## [[11]] ## [1] &quot;BarcodeSequence&quot; &quot;LibraryNumber&quot; &quot;LibraryName&quot; &quot;ProjectName&quot; &quot;X16S_region&quot; &quot;primers&quot; &quot;Pen&quot; ## [8] &quot;Feed&quot; What is the number of singletons in this dataset? Check rarefaction The number of species = ASV (y-as) should reach a plateau if the sample size = reads (x-as) is large enough. otu_tab &lt;- t(abundances(ps1)) p &lt;- vegan::rarecurve(otu_tab, step = 50, label = FALSE, sample = min(rowSums(otu_tab), Col =&quot;red&quot;, cex = 0.5)) 1.2 Calculate alpha-diversities Let’s first visualize the data plot_richness(ps1, &quot;Pen&quot;, &quot;Feed&quot;, measures=c(&quot;Observed&quot;, &quot;Shannon&quot;, &quot;Simpson&quot;, &quot;InvSimpson&quot;)) What stands out? Let’s test the four different (non-phylogenetic) alpha diversities on feed and pen alpha &lt;- estimate_richness(ps1, measures = c(&quot;Observed&quot;, &quot;Shannon&quot;, &quot;Simpson&quot;, &quot;InvSimpson&quot; )) meta &lt;- meta(ps1) #extract metadata Observed kruskal.pd &lt;- kruskal.test(alpha$Observed ~ meta$Feed) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: alpha$Observed by meta$Feed ## Kruskal-Wallis chi-squared = 16.755, df = 1, p-value = 4.253e-05 pairwise.wilcox.test(alpha$Observed, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum test with continuity correction ## ## data: alpha$Observed and meta$Pen ## ## 1 2 3 ## 2 0.7478 - - ## 3 0.0249 0.0107 - ## 4 0.0064 0.0064 0.0065 ## ## P value adjustment method: BH Simpson kruskal.pd &lt;- kruskal.test(alpha$Simpson ~ meta$Feed) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: alpha$Simpson by meta$Feed ## Kruskal-Wallis chi-squared = 14.196, df = 1, p-value = 0.0001648 pairwise.wilcox.test(alpha$Simpson, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum exact test ## ## data: alpha$Simpson and meta$Pen ## ## 1 2 3 ## 2 0.0455 - - ## 3 0.0035 0.2086 - ## 4 0.0012 0.0012 0.0012 ## ## P value adjustment method: BH Shannon kruskal.pd &lt;- kruskal.test(alpha$Shannon ~ meta$Feed) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: alpha$Shannon by meta$Feed ## Kruskal-Wallis chi-squared = 15.98, df = 1, p-value = 6.403e-05 pairwise.wilcox.test(alpha$Shannon, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum exact test ## ## data: alpha$Shannon and meta$Pen ## ## 1 2 3 ## 2 0.1282 - - ## 3 0.0105 0.0315 - ## 4 0.0012 0.0012 0.0012 ## ## P value adjustment method: BH Phylogenetic diversity #library(picante) ps.otu &lt;- as.data.frame(ps1@otu_table) ps.tree &lt;- ps1@phy_tree df.pd &lt;- pd(t(ps.otu), treefile, include.root=T) # rooted tree meta$Phylogenetic_Diversity &lt;- df.pd$PD pd.plot &lt;- ggboxplot(meta, x = &quot;Pen&quot;, y = &quot;Phylogenetic_Diversity&quot;, fill = &quot;Feed&quot;) pd.plot kruskal.pd &lt;- kruskal.test(meta$Phylogenetic_Diversity ~ meta$Pen) print(kruskal.pd) ## ## Kruskal-Wallis rank sum test ## ## data: meta$Phylogenetic_Diversity by meta$Pen ## Kruskal-Wallis chi-squared = 22.33, df = 3, p-value = 5.569e-05 pairwise.wilcox.test(meta$Phylogenetic_Diversity, meta$Pen, p.adjust.method = &quot;BH&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum exact test ## ## data: meta$Phylogenetic_Diversity and meta$Pen ## ## 1 2 3 ## 2 0.2593 - - ## 3 0.0017 0.0028 - ## 4 0.0012 0.0012 0.0012 ## ## P value adjustment method: BH Additional reading Shetty Sudarshan A, Lahti Leo, Hermes Gerben DA, &amp; Hauke Smidt. (2020, April 11) Microbial bioinformatics introductory course material 2018 (Version v3.0). Zenodo http://doi.org/10.5281/zenodo.1436630 "],["second-break-out-room.html", "Chapter 2 Second break-out room 2.1 PERMANOVA", " Chapter 2 Second break-out room We will calculated four different beta diversities: Bray-Curtis, Jaccard, unweighted UniFrac and Weighted UniFrac and use Principal Coordinates Analysis (PCoA, = Multidimensional scaling, MDS). This is a method to explore and to visualize similarities or dissimilarities of data. set.seed(12345) metadata &lt;- as(sample_data(ps1), &quot;data.frame&quot;) ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;bray&quot;) p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA Jaccard&quot;) p1 ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;jaccard&quot;, binary = TRUE) ##binary = TRUE! p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA Jaccard&quot;) p1 ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;wunifrac&quot;) p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA wunifrac&quot;) p1 ord &lt;- ordinate(ps1, method = &quot;PCoA&quot;, distance = &quot;unifrac&quot;) p &lt;- plot_ordination(ps1, ord, color = &quot;Feed&quot;, label=&quot;Pen&quot;) #shape= &quot;Pen&quot;, p1 &lt;- p + theme_bw() + ggtitle(&quot;PCoA unifrac&quot;) p1 What stands out? Which beta diversity would you use? 2.1 PERMANOVA dist.b &lt;- phyloseq::distance(ps1, method = &quot;bray&quot;) dist.j &lt;- phyloseq::distance(ps1, method = &quot;jaccard&quot;, binary = TRUE) dist.uf &lt;- phyloseq::distance(ps1, method = &quot;unifrac&quot;) dist.wuf &lt;- phyloseq::distance(ps1, method = &quot;wunifrac&quot;) adonis(dist.b ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.b ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 2.2000 2.2000 9.1588 0.2605 1e-04 *** ## Residuals 26 6.2453 0.2402 0.7395 ## Total 27 8.4453 1.0000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.b, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.010126 0.0101263 2.3739 999 0.132 ## Residuals 26 0.110907 0.0042656 adonis(dist.j ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.j ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 1.8183 1.81828 7.3404 0.22017 1e-04 *** ## Residuals 26 6.4404 0.24771 0.77983 ## Total 27 8.2587 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.j, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.047419 0.047419 17.286 999 0.001 *** ## Residuals 26 0.071322 0.002743 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis(dist.uf ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.uf ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 0.70667 0.70667 11.734 0.31096 1e-04 *** ## Residuals 26 1.56590 0.06023 0.68904 ## Total 27 2.27257 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.uf, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.025001 0.0250014 38.108 999 0.001 *** ## Residuals 26 0.017058 0.0006561 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis(dist.wuf ~ Feed, data = metadata, perm=9999) ## ## Call: ## adonis(formula = dist.wuf ~ Feed, data = metadata, permutations = 9999) ## ## Permutation: free ## Number of permutations: 9999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Feed 1 0.31792 0.31792 11.132 0.2998 1e-04 *** ## Residuals 26 0.74253 0.02856 0.7002 ## Total 27 1.06045 1.0000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ps.disper &lt;- betadisper(dist.wuf, meta$Feed) permutest(ps.disper) ## ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ## ## Response: Distances ## Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) ## Groups 1 0.018811 0.0188112 8.6956 999 0.009 ** ## Residuals 26 0.056246 0.0021633 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Which beta diversity explained most of the variation with the factor feed? Additional reading Gloor et al., 2017: Microbiome Datasets Are Compositional: And This Is Not Optional Paliy and Shankar, 2016: Application of multivariate statistical techniques in microbial ecology "],["third-break-out-room.html", "Chapter 3 Third break-out room 3.1 Barplot 3.2 Dendrogram", " Chapter 3 Third break-out room 3.1 Barplot ps1.com &lt;- microbiome::transform(ps1, &quot;compositional&quot;) ps1.com.fil = filter_taxa(ps1.com, function(x) sum(x) &gt; .01, TRUE) ps.phylum = tax_glom(ps1.com.fil, taxrank=&quot;Family&quot;, NArm=FALSE) plot_bar(ps.phylum, fill=&quot;Family&quot;) + facet_wrap(~Pen, scales= &quot;free_x&quot;, nrow=1) Try how filtering influence the barplot 3.2 Dendrogram d &lt;- distance(ps1, method = &quot;jaccard&quot;, binary = TRUE) #d &lt;- distance(ps1, method = &quot;wunifrac&quot;) # distance hpws &lt;- hclust(d, method = &quot;ward.D2&quot;) # add color library(dendextend) dend &lt;- as.dendrogram(hpws) colors_to_use &lt;- as.numeric(meta$Pen) colors_to_use &lt;- colors_to_use[order.dendrogram(dend)] labels_colors(dend) &lt;- colors_to_use plot(as.dendrogram(dend, hang = -1, cex = 0.6)) Try how cluster type influence the dendrogram "]]
>>>>>>> 5a1c794a53655e22a8227050998d867839fc0cec
